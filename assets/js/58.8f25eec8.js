(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{372:function(t,a,s){"use strict";s.r(a);var r=s(8),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("记录一些常见的前端专业名词，防止后续忘记。")])]),t._v(" "),a("h1",{attrs:{id:"业界术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业界术语"}},[t._v("#")]),t._v(" 业界术语")]),t._v(" "),a("h2",{attrs:{id:"b-s-架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-s-架构"}},[t._v("#")]),t._v(" B/S 架构")]),t._v(" "),a("p",[t._v("B/S架构（Browser/Server，浏览器/服务器架构）是一种网络架构模式，它将客户端功能通过浏览器实现，服务器负责处理业务逻辑和数据存储。用户通过浏览器访问服务器上的应用程序，而不需要安装专门的客户端软件。")]),t._v(" "),a("h2",{attrs:{id:"ci-cd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd"}},[t._v("#")]),t._v(" CI/CD")]),t._v(" "),a("p",[t._v("CI/CD（Continuous Integration/Continuous Deployment or Delivery，持续集成/持续交付或持续部署）是一组现代软件开发实践，用于自动化和提高软件交付过程的效率和质量。")]),t._v(" "),a("h2",{attrs:{id:"mvp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvp"}},[t._v("#")]),t._v(" MVP")]),t._v(" "),a("p",[t._v("最简可行产品（英语：minimum viable product, MVP），是新产品开发中的名词，是指有部分机能，恰好可以让设计者表达其核心设计概念的产品。")]),t._v(" "),a("h2",{attrs:{id:"大前端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大前端"}},[t._v("#")]),t._v(" 大前端")]),t._v(" "),a("p",[t._v("大前端是所有前端的统称，包括Android、iOS、web、Watch等，最接近用户的是UI层。 它的最大特点在于一次开发，就能同时适用于所有平台，开发者不用为一个APP需要做Android和iOS两种模式而担心。")]),t._v(" "),a("h2",{attrs:{id:"微前端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微前端"}},[t._v("#")]),t._v(" 微前端")]),t._v(" "),a("p",[t._v("微前端是一种类似于微服务的架构，是一种由独立交付的多个前端应用组成整体的架构风格，将前端应用分解成一些更小、更简单的能够独立开发、测试、部署的应用，而在用户看来仍然是内聚的单个产品。")])])}),[],!1,null,null,null);a.default=e.exports}}]);